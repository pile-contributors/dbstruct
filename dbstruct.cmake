
# enable/disable cmake debug messages related to this pile
set (DBSTRUCT_DEBUG_MSG OFF)

# make sure support code is present; no harm
# in including it twice; the user, however, should have used
# pileInclude() from pile_support.cmake module.
include(pile_support)

# initialize this module
macro    (dbstructInit
          dbstruct__use_mode)

    # default name
    if (NOT DBSTRUCT_INIT_NAME)
        set(DBSTRUCT_INIT_NAME "DbStruct")
    endif ()

    # compose the list of headers and sources
    set(DBSTRUCT_HEADERS
        "dbobject.h"
        "dbtaew.h"
        "dbrecord.h"
        "dbview.h"
        "dbcolumn.h"
        "dbtable.h"
        "dbstruct.h")
    set(DBSTRUCT_SOURCES
        "dbobject.cc"
        "dbtaew.cc"
        "dbrecord.cc"
        "dbview.cc"
        "dbcolumn.cc"
        "dbtable.cc"
        "dbstruct.cc")
    set(DBDELEGATE_QT_MODS
        Core Sql)

    pileSetSources(
        "${DBSTRUCT_INIT_NAME}"
        "${DBSTRUCT_HEADERS}"
        "${DBSTRUCT_SOURCES}")

    pileSetCommon(
        "${DBSTRUCT_INIT_NAME}"
        "0;0;1;d"
        "ON"
        "${dbstruct__use_mode}"
        ""
        "category1"
        "tag1;tag2")

    find_package(PythonInterp)


    FILE(GLOB DBSTRUCT_TEMPLATE_H
         "${DBSTRUCT_SOURCE_DIR}/qt-templates/*.h.template")
    FILE(GLOB DBSTRUCT_TEMPLATE_CC
         "${DBSTRUCT_SOURCE_DIR}/qt-templates/*.cc.template")

endmacro ()

# ============================================================================

# Create a target that generates .sql from .xml
#
# The command that will be execute will resemble
#     python pileschema.py sql --schema=PileSchema.xsd input.xml outputdir
#
macro    (dbstructModelToSql
          dbstruct__xml
          dbstruct__output
          dbstruct__target)

    if (NOT PYTHONINTERP_FOUND)
        message (FATAL_ERROR "Python interpreter was not found; can't use dbstructModelToSql without it")
    endif()

    unset(dbstruct__cmd)
    set(dbstruct__cmd "${PYTHON_EXECUTABLE}"
        "${DBSTRUCT_SOURCE_DIR}/pileschema.py"
        "sql"
        "--schema=${DBSTRUCT_SOURCE_DIR}/PileSchema.xsd"
        "${dbstruct__xml}"
        "${dbstruct__output}")

    add_custom_target(
        "${dbstruct__target}"
        ${dbstruct__cmd}
        DEPENDS
            "${DBSTRUCT_SOURCE_DIR}/pileschema.py"
            "${dbstruct__xml}"
        WORKING_DIRECTORY
            "${CMAKE_CURRECT_BINARY_DIR}"
        COMMENT "Expanding Sql models"
        VERBATIM
        SOURCES
            "${DBSTRUCT_SOURCE_DIR}/pileschema.py"
            "${dbstruct__xml}")

    # also generate this right now so CMake finds files
    # generated by this process

    execute_process(
        COMMAND "${dbstruct__cmd}"
        WORKING_DIRECTORY
            "${CMAKE_CURRECT_BINARY_DIR}"
            OUTPUT_QUIET)

endmacro ()

# ============================================================================

# Create a target that generates C++ source files from .xml
#
# The command that will be execute will resemble
#     python pileschema.py cpp --driver=qt --namespace=Xxx input.xml outputfile
#
macro    (dbstructModelToQt
          dbstruct__xml
          dbstruct__output
          dbstruct__target
          dbstruct__namespace
          dbstruct__include
          dbstruct__export
          dbstruct__template)

    if (NOT PYTHONINTERP_FOUND)
        message (FATAL_ERROR "Python interpreter was not found; can't use dbstructModelToQt without it")
    endif()

    unset(dbstruct__template_used)
    set(dbstruct__template_used "${dbstruct__template}")
    if(NOT dbstruct__template_used)
        set(dbstruct__template_used "${DBSTRUCT_SOURCE_DIR}/qt-templates")
    endif()

    unset(dbstruct__cmd)
    set(dbstruct__cmd "${PYTHON_EXECUTABLE}"
        "${DBSTRUCT_SOURCE_DIR}/pileschema.py"
        "cpp"
        "--driver=qt"
        "--namespace=${dbstruct__namespace}"
        "--schema=${DBSTRUCT_SOURCE_DIR}/PileSchema.xsd"
        "--templates=${dbstruct__template_used}"
        "--exportm=${dbstruct__export}"
        "--importh=${dbstruct__include}"
        "${dbstruct__xml}"
        "${dbstruct__output}")

    add_custom_target(
        "${dbstruct__target}"
        ${dbstruct__cmd}
        DEPENDS
            "${DBSTRUCT_SOURCE_DIR}/pileschema.py"
            "${dbstruct__xml}"
            "${DBSTRUCT_TEMPLATE_H}"
            "${DBSTRUCT_TEMPLATE_CC}"
        WORKING_DIRECTORY
            "${CMAKE_CURRECT_BINARY_DIR}"
        COMMENT "Expanding Sql models"
        VERBATIM
        SOURCES
            "${DBSTRUCT_SOURCE_DIR}/pileschema.py"
            "${dbstruct__xml}"
            "${DBSTRUCT_TEMPLATE_H}"
            "${DBSTRUCT_TEMPLATE_CC}")

    # also generate this right now so CMake finds files
    # generated by this process

    execute_process(
        COMMAND "${dbstruct__cmd}"
        WORKING_DIRECTORY
            "${CMAKE_CURRECT_BINARY_DIR}"
            OUTPUT_QUIET)

endmacro ()

# ============================================================================

